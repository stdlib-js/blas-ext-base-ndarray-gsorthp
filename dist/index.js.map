{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ndarraylike2scalar = require( '@stdlib/ndarray-base-ndarraylike2scalar' );\nvar numelDimension = require( '@stdlib/ndarray-base-numel-dimension' );\nvar getStride = require( '@stdlib/ndarray-base-stride' );\nvar getOffset = require( '@stdlib/ndarray-base-offset' );\nvar getData = require( '@stdlib/ndarray-base-data-buffer' );\nvar strided = require( '@stdlib/blas-ext-base-gsorthp' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Sorts a one-dimensional ndarray using heapsort.\n*\n* @param {ArrayLikeObject<Object>} arrays - array-like object containing a one-dimensional input ndarray and a zero-dimensional ndarray specifying the sort order\n* @returns {ndarray} input ndarray\n*\n* @example\n* var ndarray2array = require( '@stdlib/ndarray-to-array' );\n* var scalar2ndarray = require( '@stdlib/ndarray-from-scalar' );\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n*\n* var xbuf = [ 1.0, -2.0, 3.0, -4.0 ];\n* var x = new ndarray( 'generic', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var ord = scalar2ndarray( 1.0, {\n*    'dtype': 'generic'\n* });\n*\n* var out = gsorthp( [ x, ord ] );\n* // returns <ndarray>\n*\n* var arr = ndarray2array( out );\n* // returns [ -4.0, -2.0, 1.0, 3.0 ]\n*/\nfunction gsorthp( arrays ) {\n\tvar ord;\n\tvar x;\n\n\tx = arrays[ 0 ];\n\tord = ndarraylike2scalar( arrays[ 1 ] );\n\tstrided( numelDimension( x, 0 ), ord, getData( x ), getStride( x, 0 ), getOffset( x ) ); // eslint-disable-line max-len\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gsorthp;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Sort a one-dimensional ndarray using heapsort.\n*\n* @module @stdlib/blas-ext-base-ndarray-gsorthp\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n* var ndarray2array = require( '@stdlib/ndarray-base-to-array' );\n* var gsorthp = require( '@stdlib/blas-ext-base-ndarray-gsorthp' );\n*\n* var xbuf = [ 1.0, -2.0, 3.0, -4.0 ];\n* var x = new ndarray( 'generic', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var ord = scalar2ndarray( 1.0, {\n*    'dtype': 'generic'\n* });\n*\n* var out = gsorthp( [ x, ord ] );\n* // returns <ndarray>\n*\n* var arr = ndarra2array( out );\n* // returns [ -4.0, -2.0, 1.0, 3.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAqB,QAAS,yCAA0C,EACxEC,EAAiB,QAAS,sCAAuC,EACjEC,EAAY,QAAS,6BAA8B,EACnDC,EAAY,QAAS,6BAA8B,EACnDC,EAAU,QAAS,kCAAmC,EACtDC,EAAU,QAAS,+BAAgC,EAAE,QA6BzD,SAASC,EAASC,EAAS,CAC1B,IAAIC,EACAC,EAEJ,OAAAA,EAAIF,EAAQ,CAAE,EACdC,EAAMR,EAAoBO,EAAQ,CAAE,CAAE,EACtCF,EAASJ,EAAgBQ,EAAG,CAAE,EAAGD,EAAKJ,EAASK,CAAE,EAAGP,EAAWO,EAAG,CAAE,EAAGN,EAAWM,CAAE,CAAE,EAC/EA,CACR,CAKAV,EAAO,QAAUO,ICvBjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "ndarraylike2scalar", "numelDimension", "getStride", "getOffset", "getData", "strided", "gsorthp", "arrays", "ord", "x", "main"]
}
