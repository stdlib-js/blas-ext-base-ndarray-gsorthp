{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ndarraylike2scalar from '@stdlib/ndarray-base-ndarraylike2scalar';\nimport numelDimension from '@stdlib/ndarray-base-numel-dimension';\nimport getStride from '@stdlib/ndarray-base-stride';\nimport getOffset from '@stdlib/ndarray-base-offset';\nimport getData from '@stdlib/ndarray-base-data-buffer';\nimport { ndarray as strided } from '@stdlib/blas-ext-base-gsorthp';\n\n\n// MAIN //\n\n/**\n* Sorts a one-dimensional ndarray using heapsort.\n*\n* @param {ArrayLikeObject<Object>} arrays - array-like object containing a one-dimensional input ndarray and a zero-dimensional ndarray specifying the sort order\n* @returns {ndarray} input ndarray\n*\n* @example\n* import ndarray2array from '@stdlib/ndarray-to-array';\n* import scalar2ndarray from '@stdlib/ndarray-from-scalar';\n* import ndarray from '@stdlib/ndarray-base-ctor';\n*\n* var xbuf = [ 1.0, -2.0, 3.0, -4.0 ];\n* var x = new ndarray( 'generic', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var ord = scalar2ndarray( 1.0, {\n*    'dtype': 'generic'\n* });\n*\n* var out = gsorthp( [ x, ord ] );\n* // returns <ndarray>\n*\n* var arr = ndarray2array( out );\n* // returns [ -4.0, -2.0, 1.0, 3.0 ]\n*/\nfunction gsorthp( arrays ) {\n\tvar ord;\n\tvar x;\n\n\tx = arrays[ 0 ];\n\tord = ndarraylike2scalar( arrays[ 1 ] );\n\tstrided( numelDimension( x, 0 ), ord, getData( x ), getStride( x, 0 ), getOffset( x ) ); // eslint-disable-line max-len\n\treturn x;\n}\n\n\n// EXPORTS //\n\nexport default gsorthp;\n"],"names":["gsorthp","arrays","ord","x","ndarraylike2scalar","strided","numelDimension","getData","getStride","getOffset"],"mappings":";;olBAwDA,SAASA,EAASC,GACjB,IAAIC,EACAC,EAKJ,OAHAA,EAAIF,EAAQ,GACZC,EAAME,EAAoBH,EAAQ,IAClCI,EAASC,EAAgBH,EAAG,GAAKD,EAAKK,EAASJ,GAAKK,EAAWL,EAAG,GAAKM,EAAWN,IAC3EA,CACR"}